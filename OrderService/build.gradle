plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4'
	id 'jacoco'
}

ext {
	springCloudVersion = "2024.0.0"
}

group = 'com.example'
//version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'com.google.protobuf:protobuf-java:3.25.2'

	runtimeOnly 'com.mysql:mysql-connector-j'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testRuntimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.6.1'
	}
}

jacocoTestReport {
	dependsOn test
	finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'BUNDLE'

			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.8
			}

			includes = [
			        'com.example.OrderService.service.**'
			]
		}
	}
}